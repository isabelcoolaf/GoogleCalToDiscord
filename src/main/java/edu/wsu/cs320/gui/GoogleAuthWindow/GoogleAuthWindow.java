package edu.wsu.cs320.gui.GoogleAuthWindow;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import edu.wsu.cs320.gui.control.GuiResponse;
import edu.wsu.cs320.gui.control.ResponsiveGUI;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.util.concurrent.CancellationException;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.ExecutionException;

public class GoogleAuthWindow implements ResponsiveGUI {
    public JPanel mainPanel;
    private JButton saveButton;
    private JPanel centerPanel;
    private JLabel ifLabel;
    private JTextField idField;
    private JLabel secretLabel;
    private JTextField secretField;
    private CompletableFuture<GuiResponse<String[]>> pendingResponse;

    public GoogleAuthWindow() {
        saveButton.addActionListener(event -> completeResponse());
    }

    @Override
    public JPanel getGuiPanel() {
        return mainPanel;
    }


    public void completeResponse() {
        System.out.println("Checking if response exists...");
        if (pendingResponse == null) return; // No response to complete
        System.out.println("Completing Response...");
        String[] dataPacket = new String[2];
        String id = idField.getText();
        String secret = secretField.getText();
        if (id.isEmpty() || secret.isEmpty()) {
            pendingResponse.complete(
                    new GuiResponse<String[]>(GuiResponse.ResponseCode.INCOMPLETE_DATA, null)
            );
        }
        dataPacket[0] = idField.getText();
        dataPacket[1] = secretField.getText();
        pendingResponse.complete(
                new GuiResponse<String[]>(GuiResponse.ResponseCode.OK, dataPacket)
        );
    }

    @Override
    public GuiResponse<String[]> getResponse() {
        this.pendingResponse = new CompletableFuture<GuiResponse<String[]>>();
        GuiResponse<String[]> result;
        try {
            result = this.pendingResponse.get();
        } catch (CancellationException | InterruptedException | ExecutionException e) {
            return new GuiResponse<String[]>(GuiResponse.ResponseCode.CANCELLED, null);
        }
        return result;
    }

    @Override
    public void onWindowClose() {
        if (pendingResponse == null) return;
        pendingResponse.complete(new GuiResponse<String[]>(GuiResponse.ResponseCode.WINDOW_CLOSED, null));
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(1, 1, new Insets(10, 10, 10, 10), -1, -1));
        centerPanel = new JPanel();
        centerPanel.setLayout(new GridLayoutManager(3, 3, new Insets(0, 0, 0, 0), 0, 0));
        mainPanel.add(centerPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 1, false));
        centerPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        saveButton = new JButton();
        saveButton.setText("Save");
        centerPanel.add(saveButton, new GridConstraints(2, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        secretField = new JTextField();
        centerPanel.add(secretField, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        secretLabel = new JLabel();
        secretLabel.setText("Google Client Secret: ");
        centerPanel.add(secretLabel, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        idField = new JTextField();
        centerPanel.add(idField, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        ifLabel = new JLabel();
        ifLabel.setText("Google Client ID: ");
        centerPanel.add(ifLabel, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
