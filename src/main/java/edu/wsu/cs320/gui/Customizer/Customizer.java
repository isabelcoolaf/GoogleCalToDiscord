package edu.wsu.cs320.gui.Customizer;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class Customizer {
    public JPanel mainPanel;
    private JPanel imagePreview;
    private JPanel previewContainer;
    private JProgressBar timeProgress;
    private JLabel eventName;
    private JLabel eventSummary;
    private JLabel timeStart;
    private JLabel timeEnd;
    private JButton changeImageButton;
    private JLabel usingLabel;

    public Customizer() {
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(4, 3, new Insets(5, 5, 5, 5), -1, -1));
        mainPanel.setForeground(new Color(-16777216));
        final Spacer spacer1 = new Spacer();
        mainPanel.add(spacer1, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        mainPanel.add(spacer2, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        mainPanel.add(spacer3, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer4 = new Spacer();
        mainPanel.add(spacer4, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        previewContainer = new JPanel();
        previewContainer.setLayout(new GridLayoutManager(3, 2, new Insets(10, 10, 10, 10), 0, 0));
        previewContainer.setBackground(new Color(-13552840));
        previewContainer.setForeground(new Color(-13552840));
        previewContainer.setOpaque(true);
        mainPanel.add(previewContainer, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        imagePreview = new JPanel();
        imagePreview.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), 5, -1));
        imagePreview.setBackground(new Color(-16777216));
        imagePreview.setForeground(new Color(-16777216));
        previewContainer.add(imagePreview, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(64, 64), null, new Dimension(64, 64), 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(3, 5, new Insets(0, 0, 0, 0), -1, -1));
        panel1.setBackground(new Color(-13552840));
        panel1.setForeground(new Color(-13552840));
        panel1.setOpaque(true);
        previewContainer.add(panel1, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        eventName = new JLabel();
        Font eventNameFont = this.$$$getFont$$$("Gadugi", Font.BOLD, -1, eventName.getFont());
        if (eventNameFont != null) eventName.setFont(eventNameFont);
        eventName.setForeground(new Color(-988432));
        eventName.setOpaque(false);
        eventName.setText("<Event Name>");
        panel1.add(eventName, new GridConstraints(0, 0, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        eventSummary = new JLabel();
        Font eventSummaryFont = this.$$$getFont$$$("Gadugi", Font.PLAIN, -1, eventSummary.getFont());
        if (eventSummaryFont != null) eventSummary.setFont(eventSummaryFont);
        eventSummary.setForeground(new Color(-988432));
        eventSummary.setOpaque(false);
        eventSummary.setText("<Event description>");
        panel1.add(eventSummary, new GridConstraints(1, 0, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        timeStart = new JLabel();
        Font timeStartFont = this.$$$getFont$$$("Droid Sans Mono", Font.BOLD, -1, timeStart.getFont());
        if (timeStartFont != null) timeStart.setFont(timeStartFont);
        timeStart.setForeground(new Color(-988432));
        timeStart.setOpaque(false);
        timeStart.setText("12:34");
        panel1.add(timeStart, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        timeEnd = new JLabel();
        timeEnd.setAutoscrolls(false);
        timeEnd.setBackground(new Color(-13552840));
        Font timeEndFont = this.$$$getFont$$$("Droid Sans Mono", Font.BOLD, -1, timeEnd.getFont());
        if (timeEndFont != null) timeEnd.setFont(timeEndFont);
        timeEnd.setForeground(new Color(-988432));
        timeEnd.setOpaque(true);
        timeEnd.setText("99:99");
        panel1.add(timeEnd, new GridConstraints(2, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        timeProgress = new JProgressBar();
        Font timeProgressFont = this.$$$getFont$$$("Gadugi", Font.BOLD, -1, timeProgress.getFont());
        if (timeProgressFont != null) timeProgress.setFont(timeProgressFont);
        timeProgress.setInheritsPopupMenu(true);
        timeProgress.setMaximum(6039);
        timeProgress.setValue(754);
        panel1.add(timeProgress, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer5 = new Spacer();
        panel1.add(spacer5, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, new Dimension(5, -1), new Dimension(5, -1), new Dimension(5, -1), 0, false));
        final Spacer spacer6 = new Spacer();
        panel1.add(spacer6, new GridConstraints(2, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, new Dimension(5, -1), new Dimension(5, -1), new Dimension(5, -1), 0, false));
        usingLabel = new JLabel();
        Font usingLabelFont = this.$$$getFont$$$("Gadugi", Font.BOLD, -1, usingLabel.getFont());
        if (usingLabelFont != null) usingLabel.setFont(usingLabelFont);
        usingLabel.setForeground(new Color(-988432));
        usingLabel.setHorizontalAlignment(2);
        usingLabel.setHorizontalTextPosition(2);
        usingLabel.setText("Using GC2D");
        previewContainer.add(usingLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer7 = new Spacer();
        previewContainer.add(spacer7, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(5, 5), new Dimension(5, 5), new Dimension(5, 5), 0, false));
        changeImageButton = new JButton();
        changeImageButton.setText("Change image");
        mainPanel.add(changeImageButton, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
